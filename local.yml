services:
  api: &api
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    image: sycosur_api
    container_name: sycosur_api
    volumes:
      - ./backend/:/app:z
      - ./backend/staticfiles:/app/staticfiles
      - ./backend/media:/app/media
    expose:
      - "8001"
    env_file:
      - ./backend/.envs/.env.local
    depends_on:
      - postgres
      - mailpit
      - redis
    command: /start
    networks:
      - sycosur_network

  postgres:
    build:
      context: .
      dockerfile: ./docker/local/postgres/Dockerfile
    image: sycosur_postgres
    container_name: sycosur_postgres
    ports:
      - "5432:5432"
    volumes:
      - sycosur_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./backend/.envs/.env.local
    networks:
      - sycosur_network

  mailpit:
    image: docker.io/axllent/mailpit:v1.15
    container_name: sycosur_mailpit
    ports:
      - "8025:8025"
      - "1025:1025"
    volumes:
      - sycosur_mailpit_data:/data
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATA_FILE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - sycosur_network

  client:
    build:
      context: .
      dockerfile: ./docker/local/client/Dockerfile
    container_name: sycosur_client
    image: sycosur_client
    expose:
      - "3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - WATCHPACK_POLLING=true
    networks:
      - sycosur_network

  redis:
    image: redis:7.0-alpine3.19
    command: redis-server --appendonly yes
    container_name: sycosur_redis
    volumes:
      - sycosur_redis_data:/data
    networks:
      - sycosur_network

  celeryworker:
    <<: *api
    image: sycosur_celeryworker
    container_name: sycosur_celeryworker
    command: /start-celeryworker

#  celerybeat:
#    <<: *api
#    image: sycosur_celerybeat
#    container_name: sycosur_celerybeat
#    command: /start-celerybeat

  flower:
    <<: *api
    image: sycosur_flower
    container_name: sycosur_flower
    ports:
      - "5555:5555"
    command: /start-flower

  nginx:
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    restart: always
    container_name: sycosur_nginx
    ports:
      - "8080:80"
    volumes:
      - ./backend/staticfiles:/app/staticfiles
      - ./backend/media:/app/media
      - logs_store:/var/log/nginx
    depends_on:
      - api
      - client
    networks:
      - sycosur_network

volumes:
  sycosur_postgres_data: {}
  sycosur_mailpit_data: {}
  logs_store: {}
  sycosur_redis_data: {}

networks:
  sycosur_network:
    external: true
